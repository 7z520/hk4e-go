// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: IslandPartySettleNotify.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CmdId: 24601
// EnetChannelId: 0
// EnetIsReliable: true
type IslandPartySettleNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsNewRecord    bool                            `protobuf:"varint,13,opt,name=is_new_record,json=isNewRecord,proto3" json:"is_new_record,omitempty"`
	Reason         GalleryStopReason               `protobuf:"varint,1,opt,name=reason,proto3,enum=proto.GalleryStopReason" json:"reason,omitempty"`
	SettleInfoList []*IslandPartyGallerySettleInfo `protobuf:"bytes,8,rep,name=settle_info_list,json=settleInfoList,proto3" json:"settle_info_list,omitempty"`
	ScoreList      []*ExhibitionDisplayInfo        `protobuf:"bytes,6,rep,name=score_list,json=scoreList,proto3" json:"score_list,omitempty"`
	TimeRemain     uint32                          `protobuf:"varint,15,opt,name=time_remain,json=timeRemain,proto3" json:"time_remain,omitempty"`
}

func (x *IslandPartySettleNotify) Reset() {
	*x = IslandPartySettleNotify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_IslandPartySettleNotify_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IslandPartySettleNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IslandPartySettleNotify) ProtoMessage() {}

func (x *IslandPartySettleNotify) ProtoReflect() protoreflect.Message {
	mi := &file_IslandPartySettleNotify_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IslandPartySettleNotify.ProtoReflect.Descriptor instead.
func (*IslandPartySettleNotify) Descriptor() ([]byte, []int) {
	return file_IslandPartySettleNotify_proto_rawDescGZIP(), []int{0}
}

func (x *IslandPartySettleNotify) GetIsNewRecord() bool {
	if x != nil {
		return x.IsNewRecord
	}
	return false
}

func (x *IslandPartySettleNotify) GetReason() GalleryStopReason {
	if x != nil {
		return x.Reason
	}
	return GalleryStopReason_GALLERY_STOP_REASON_NONE
}

func (x *IslandPartySettleNotify) GetSettleInfoList() []*IslandPartyGallerySettleInfo {
	if x != nil {
		return x.SettleInfoList
	}
	return nil
}

func (x *IslandPartySettleNotify) GetScoreList() []*ExhibitionDisplayInfo {
	if x != nil {
		return x.ScoreList
	}
	return nil
}

func (x *IslandPartySettleNotify) GetTimeRemain() uint32 {
	if x != nil {
		return x.TimeRemain
	}
	return 0
}

var File_IslandPartySettleNotify_proto protoreflect.FileDescriptor

var file_IslandPartySettleNotify_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x45, 0x78, 0x68, 0x69, 0x62, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x74, 0x6f, 0x70,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x49, 0x73,
	0x6c, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x9c, 0x02, 0x0a, 0x17, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x22, 0x0a, 0x0d,
	0x69, 0x73, 0x5f, 0x6e, 0x65, 0x77, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79,
	0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x10, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x73, 0x6c, 0x61, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x47, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x79, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0e, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3b, 0x0a, 0x0a, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x78,
	0x68, 0x69, 0x62, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x42,
	0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_IslandPartySettleNotify_proto_rawDescOnce sync.Once
	file_IslandPartySettleNotify_proto_rawDescData = file_IslandPartySettleNotify_proto_rawDesc
)

func file_IslandPartySettleNotify_proto_rawDescGZIP() []byte {
	file_IslandPartySettleNotify_proto_rawDescOnce.Do(func() {
		file_IslandPartySettleNotify_proto_rawDescData = protoimpl.X.CompressGZIP(file_IslandPartySettleNotify_proto_rawDescData)
	})
	return file_IslandPartySettleNotify_proto_rawDescData
}

var file_IslandPartySettleNotify_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_IslandPartySettleNotify_proto_goTypes = []interface{}{
	(*IslandPartySettleNotify)(nil),      // 0: proto.IslandPartySettleNotify
	(GalleryStopReason)(0),               // 1: proto.GalleryStopReason
	(*IslandPartyGallerySettleInfo)(nil), // 2: proto.IslandPartyGallerySettleInfo
	(*ExhibitionDisplayInfo)(nil),        // 3: proto.ExhibitionDisplayInfo
}
var file_IslandPartySettleNotify_proto_depIdxs = []int32{
	1, // 0: proto.IslandPartySettleNotify.reason:type_name -> proto.GalleryStopReason
	2, // 1: proto.IslandPartySettleNotify.settle_info_list:type_name -> proto.IslandPartyGallerySettleInfo
	3, // 2: proto.IslandPartySettleNotify.score_list:type_name -> proto.ExhibitionDisplayInfo
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_IslandPartySettleNotify_proto_init() }
func file_IslandPartySettleNotify_proto_init() {
	if File_IslandPartySettleNotify_proto != nil {
		return
	}
	file_ExhibitionDisplayInfo_proto_init()
	file_GalleryStopReason_proto_init()
	file_IslandPartyGallerySettleInfo_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_IslandPartySettleNotify_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IslandPartySettleNotify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_IslandPartySettleNotify_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_IslandPartySettleNotify_proto_goTypes,
		DependencyIndexes: file_IslandPartySettleNotify_proto_depIdxs,
		MessageInfos:      file_IslandPartySettleNotify_proto_msgTypes,
	}.Build()
	File_IslandPartySettleNotify_proto = out.File
	file_IslandPartySettleNotify_proto_rawDesc = nil
	file_IslandPartySettleNotify_proto_goTypes = nil
	file_IslandPartySettleNotify_proto_depIdxs = nil
}
