// Sorapointa - A server software re-implementation for a certain anime game, and avoid sorapointa.
// Copyright (C) 2022  Sorapointa Team
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as
// published by the Free Software Foundation, either version 3 of the
// License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: UgcMusicBriefInfo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UgcMusicBriefInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImportFromUgcGuid     uint64   `protobuf:"varint,5,opt,name=import_from_ugc_guid,json=importFromUgcGuid,proto3" json:"import_from_ugc_guid,omitempty"`
	IsPublished           bool     `protobuf:"varint,8,opt,name=is_published,json=isPublished,proto3" json:"is_published,omitempty"`
	IsPlayed              bool     `protobuf:"varint,1,opt,name=is_played,json=isPlayed,proto3" json:"is_played,omitempty"`
	MusicId               uint32   `protobuf:"varint,2,opt,name=music_id,json=musicId,proto3" json:"music_id,omitempty"`
	SavePageType          uint32   `protobuf:"varint,1182,opt,name=save_page_type,json=savePageType,proto3" json:"save_page_type,omitempty"`
	SaveIdx               uint32   `protobuf:"varint,12,opt,name=save_idx,json=saveIdx,proto3" json:"save_idx,omitempty"`
	CreatorNickname       string   `protobuf:"bytes,10,opt,name=creator_nickname,json=creatorNickname,proto3" json:"creator_nickname,omitempty"`
	Version               uint32   `protobuf:"varint,15,opt,name=version,proto3" json:"version,omitempty"`
	SaveTime              uint32   `protobuf:"varint,3,opt,name=save_time,json=saveTime,proto3" json:"save_time,omitempty"`
	AfterNoteList         []uint32 `protobuf:"varint,1002,rep,packed,name=after_note_list,json=afterNoteList,proto3" json:"after_note_list,omitempty"`
	BeforeNoteList        []uint32 `protobuf:"varint,982,rep,packed,name=before_note_list,json=beforeNoteList,proto3" json:"before_note_list,omitempty"`
	IsPsnPlatform         bool     `protobuf:"varint,9,opt,name=is_psn_platform,json=isPsnPlatform,proto3" json:"is_psn_platform,omitempty"`
	TimeLineEditTime      uint32   `protobuf:"varint,1822,opt,name=time_line_edit_time,json=timeLineEditTime,proto3" json:"time_line_edit_time,omitempty"`
	IsChangedAfterPublish bool     `protobuf:"varint,11,opt,name=is_changed_after_publish,json=isChangedAfterPublish,proto3" json:"is_changed_after_publish,omitempty"`
	PublishTime           uint32   `protobuf:"varint,13,opt,name=publish_time,json=publishTime,proto3" json:"publish_time,omitempty"`
	MaxScore              uint32   `protobuf:"varint,14,opt,name=max_score,json=maxScore,proto3" json:"max_score,omitempty"`
	RealTimeEditTime      uint32   `protobuf:"varint,576,opt,name=real_time_edit_time,json=realTimeEditTime,proto3" json:"real_time_edit_time,omitempty"`
	NoteCount             uint32   `protobuf:"varint,7,opt,name=note_count,json=noteCount,proto3" json:"note_count,omitempty"`
	UgcGuid               uint64   `protobuf:"varint,4,opt,name=ugc_guid,json=ugcGuid,proto3" json:"ugc_guid,omitempty"`
	SelfMaxScore          uint32   `protobuf:"varint,6,opt,name=self_max_score,json=selfMaxScore,proto3" json:"self_max_score,omitempty"`
}

func (x *UgcMusicBriefInfo) Reset() {
	*x = UgcMusicBriefInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_UgcMusicBriefInfo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UgcMusicBriefInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UgcMusicBriefInfo) ProtoMessage() {}

func (x *UgcMusicBriefInfo) ProtoReflect() protoreflect.Message {
	mi := &file_UgcMusicBriefInfo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UgcMusicBriefInfo.ProtoReflect.Descriptor instead.
func (*UgcMusicBriefInfo) Descriptor() ([]byte, []int) {
	return file_UgcMusicBriefInfo_proto_rawDescGZIP(), []int{0}
}

func (x *UgcMusicBriefInfo) GetImportFromUgcGuid() uint64 {
	if x != nil {
		return x.ImportFromUgcGuid
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetIsPublished() bool {
	if x != nil {
		return x.IsPublished
	}
	return false
}

func (x *UgcMusicBriefInfo) GetIsPlayed() bool {
	if x != nil {
		return x.IsPlayed
	}
	return false
}

func (x *UgcMusicBriefInfo) GetMusicId() uint32 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetSavePageType() uint32 {
	if x != nil {
		return x.SavePageType
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetSaveIdx() uint32 {
	if x != nil {
		return x.SaveIdx
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetCreatorNickname() string {
	if x != nil {
		return x.CreatorNickname
	}
	return ""
}

func (x *UgcMusicBriefInfo) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetSaveTime() uint32 {
	if x != nil {
		return x.SaveTime
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetAfterNoteList() []uint32 {
	if x != nil {
		return x.AfterNoteList
	}
	return nil
}

func (x *UgcMusicBriefInfo) GetBeforeNoteList() []uint32 {
	if x != nil {
		return x.BeforeNoteList
	}
	return nil
}

func (x *UgcMusicBriefInfo) GetIsPsnPlatform() bool {
	if x != nil {
		return x.IsPsnPlatform
	}
	return false
}

func (x *UgcMusicBriefInfo) GetTimeLineEditTime() uint32 {
	if x != nil {
		return x.TimeLineEditTime
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetIsChangedAfterPublish() bool {
	if x != nil {
		return x.IsChangedAfterPublish
	}
	return false
}

func (x *UgcMusicBriefInfo) GetPublishTime() uint32 {
	if x != nil {
		return x.PublishTime
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetMaxScore() uint32 {
	if x != nil {
		return x.MaxScore
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetRealTimeEditTime() uint32 {
	if x != nil {
		return x.RealTimeEditTime
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetNoteCount() uint32 {
	if x != nil {
		return x.NoteCount
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetUgcGuid() uint64 {
	if x != nil {
		return x.UgcGuid
	}
	return 0
}

func (x *UgcMusicBriefInfo) GetSelfMaxScore() uint32 {
	if x != nil {
		return x.SelfMaxScore
	}
	return 0
}

var File_UgcMusicBriefInfo_proto protoreflect.FileDescriptor

var file_UgcMusicBriefInfo_proto_rawDesc = []byte{
	0x0a, 0x17, 0x55, 0x67, 0x63, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x42, 0x72, 0x69, 0x65, 0x66, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf8, 0x05, 0x0a, 0x11, 0x55, 0x67, 0x63, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x42, 0x72, 0x69,
	0x65, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x14, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x67, 0x63, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x69, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x6f, 0x6d,
	0x55, 0x67, 0x63, 0x47, 0x75, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63,
	0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x9e, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x61, 0x76,
	0x65, 0x50, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x61, 0x76,
	0x65, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x61, 0x76,
	0x65, 0x49, 0x64, 0x78, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x61, 0x76,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x61,
	0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0xea, 0x07, 0x20, 0x03, 0x28, 0x0d,
	0x52, 0x0d, 0x61, 0x66, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x29, 0x0a, 0x10, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0xd6, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x62, 0x65, 0x66, 0x6f,
	0x72, 0x65, 0x4e, 0x6f, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73,
	0x5f, 0x70, 0x73, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x50, 0x73, 0x6e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x5f,
	0x65, 0x64, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x9e, 0x0e, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x10, 0x74, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6e, 0x65, 0x45, 0x64, 0x69, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x73, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x72,
	0x65, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0xc0, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x65, 0x61, 0x6c, 0x54,
	0x69, 0x6d, 0x65, 0x45, 0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6e,
	0x6f, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x09, 0x6e, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x67,
	0x63, 0x5f, 0x67, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x67,
	0x63, 0x47, 0x75, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d, 0x61,
	0x78, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73,
	0x65, 0x6c, 0x66, 0x4d, 0x61, 0x78, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
	0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_UgcMusicBriefInfo_proto_rawDescOnce sync.Once
	file_UgcMusicBriefInfo_proto_rawDescData = file_UgcMusicBriefInfo_proto_rawDesc
)

func file_UgcMusicBriefInfo_proto_rawDescGZIP() []byte {
	file_UgcMusicBriefInfo_proto_rawDescOnce.Do(func() {
		file_UgcMusicBriefInfo_proto_rawDescData = protoimpl.X.CompressGZIP(file_UgcMusicBriefInfo_proto_rawDescData)
	})
	return file_UgcMusicBriefInfo_proto_rawDescData
}

var file_UgcMusicBriefInfo_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_UgcMusicBriefInfo_proto_goTypes = []interface{}{
	(*UgcMusicBriefInfo)(nil), // 0: proto.UgcMusicBriefInfo
}
var file_UgcMusicBriefInfo_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_UgcMusicBriefInfo_proto_init() }
func file_UgcMusicBriefInfo_proto_init() {
	if File_UgcMusicBriefInfo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_UgcMusicBriefInfo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UgcMusicBriefInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_UgcMusicBriefInfo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_UgcMusicBriefInfo_proto_goTypes,
		DependencyIndexes: file_UgcMusicBriefInfo_proto_depIdxs,
		MessageInfos:      file_UgcMusicBriefInfo_proto_msgTypes,
	}.Build()
	File_UgcMusicBriefInfo_proto = out.File
	file_UgcMusicBriefInfo_proto_rawDesc = nil
	file_UgcMusicBriefInfo_proto_goTypes = nil
	file_UgcMusicBriefInfo_proto_depIdxs = nil
}
