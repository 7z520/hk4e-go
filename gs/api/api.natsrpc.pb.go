// Code generated by protoc-gen-natsrpc. DO NOT EDIT.
// versions:
// - protoc-gen-natsrpc v0.5.0
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	natsrpc "github.com/byebyebruce/natsrpc"
	nats_go "github.com/nats-io/nats.go"
	proto "google.golang.org/protobuf/proto"
)

var _ = new(context.Context)
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = natsrpc.Version
var _ = nats_go.Version

// GM 服务
type GMNATSRPCServer interface {
	Cmd(ctx context.Context, req *CmdRequest) (*CmdReply, error)
}

// RegisterGMNATSRPCServer register GM service
func RegisterGMNATSRPCServer(server *natsrpc.Server, s GMNATSRPCServer, opts ...natsrpc.ServiceOption) (natsrpc.IService, error) {
	return server.Register("hk4e.gs.api.GM", s, opts...)
}

// GM 服务
type GMNATSRPCClient interface {
	Cmd(ctx context.Context, req *CmdRequest, opt ...natsrpc.CallOption) (*CmdReply, error)
}

type _GMNATSRPCClient struct {
	c *natsrpc.Client
}

// NewGMNATSRPCClient
func NewGMNATSRPCClient(enc *nats_go.EncodedConn, opts ...natsrpc.ClientOption) (GMNATSRPCClient, error) {
	c, err := natsrpc.NewClient(enc, "hk4e.gs.api.GM", opts...)
	if err != nil {
		return nil, err
	}
	ret := &_GMNATSRPCClient{
		c: c,
	}
	return ret, nil
}
func (c *_GMNATSRPCClient) Cmd(ctx context.Context, req *CmdRequest, opt ...natsrpc.CallOption) (*CmdReply, error) {
	rep := &CmdReply{}
	err := c.c.Request(ctx, "Cmd", req, rep, opt...)
	return rep, err
}
