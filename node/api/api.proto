syntax = "proto3";

package node.api;
option go_package = "hk4e/node/api;api";

// 节点服务器注册发现服务
service Discovery {
  // 服务器启动注册获取appid
  rpc RegisterServer (RegisterServerReq) returns (RegisterServerRsp) {}
  // 服务器关闭取消注册
  rpc CancelServer (CancelServerReq) returns (NullMsg) {}
  // 服务器在线心跳保持
  rpc KeepaliveServer (KeepaliveServerReq) returns (NullMsg) {}
  // 获取负载最小的服务器的appid
  rpc GetServerAppId (GetServerAppIdReq) returns (GetServerAppIdRsp) {}
  // 获取区服密钥信息
  rpc GetRegionEc2b (NullMsg) returns (RegionEc2b) {}
  // 获取负载最小的网关服务器的地址和端口
  rpc GetGateServerAddr (NullMsg) returns (GateServerAddr) {}
}

message NullMsg {
}

message GetServerAppIdReq {
  string server_type = 1;
}

message GetServerAppIdRsp {
  string app_id = 1;
}

message RegisterServerReq {
  string server_type = 1;
  GateServerAddr gate_server_addr = 2;
}

message RegisterServerRsp {
  string app_id = 1;
  uint32 gs_id = 2;
}

message CancelServerReq {
  string server_type = 1;
  string app_id = 2;
}

message KeepaliveServerReq {
  string server_type = 1;
  string app_id = 2;
}

message RegionEc2b {
  bytes data = 1;
}

message GateServerAddr {
  string ip_addr = 1;
  uint32 port = 2;
}
